name: CMake Build and Release

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write

env:
  QT_VERSION: 5

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            packages: qtbase5-dev qtchooser qt5-qmake qtbase5-dev-tools
            artifact_name: Linux
            artifact_extension: .tar.gz
            binary_pattern: build/sample-qt-app
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
            artifact_name: macOS
            artifact_extension: .tar.gz
            binary_pattern: build/sample-qt-app

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # Install Qt on Linux
    - name: Install Qt (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y ${{ matrix.packages }}

    # Install Qt on macOS
    - name: Install Qt (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install qt@${{ env.QT_VERSION }}
        echo "$(brew --prefix qt@${{ env.QT_VERSION }})/bin" >> $GITHUB_PATH

    # Configure CMake
    - name: Configure CMake
      run: |
        cmake --version
        cmake -B build \
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} \
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} \
          -DCMAKE_BUILD_TYPE=Release \
          -S ${{ github.workspace }}

    - name: Build
      run: cmake --build build --config Release --verbose

    # Package the application
    - name: Package Application
      shell: bash
      run: |
        mkdir -p dist
        cp ${{ matrix.binary_pattern }} dist/
        tar czf qt-app-${{ matrix.artifact_name }}${{ matrix.artifact_extension }} -C dist .

    # Create Release for tags
    - name: Create Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: qt-app-${{ matrix.artifact_name }}${{ matrix.artifact_extension }}
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # Upload artifacts
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: qt-app-${{ matrix.artifact_name }}
        path: qt-app-${{ matrix.artifact_name }}${{ matrix.artifact_extension }}
        if-no-files-found: error